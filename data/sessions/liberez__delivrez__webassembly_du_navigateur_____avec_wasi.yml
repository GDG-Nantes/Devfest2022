---
key: liberez__delivrez__webassembly_du_navigateur_____avec_wasi
title: Lib√©rez, d√©livrez  WebAssembly du navigateur ... Avec WASI
language: French
talkType: conference
tags:
  - cloud_devops
complexity: Beginner
speakers:
  - philippe_charriere
slot: day-2-conference-5
room: Tour de Bretagne
openfeedbackId: 22
youtube: a21VuaKWLIg
abstract: |+
  Vous avez les paroles ?  D√©sol√© üòâ

  On a commenc√© √† entendre parler de WebAssembly aux alentours de 2015 (une sorte de bytecode optimis√© qui peut s'ex√©cuter dans un navigateur pour apporter des supers pouvoirs √† JavaScript - Et vous pouvez coder √ßa avec du Rust, Go, Swift, ...). L'int√©gration de Wasm (le petit nom de WebAssembly) avec la VM JavaScript est plut√¥t compl√®te (on peut d√©j√† faire de belles choses et les mettre en production). Rapidement (plus ou moins) il est apparu que Wasm pr√©sentait de l'int√©r√™t pour d'autres cas d'usages (FaaS, UDF, plugins, ...). Donc en 2019, c'est la naissance de la sp√©cification WASI : WebAssembly System Interface, ou comment "ex√©cuter du Wasm" en dehors d'un navigateur.

  Ce talk comportera 2 parties:

  - Une "petite" partie : une introduction √† WASI avec ses qualit√©s et ses faiblesses, les perspectives
  - Une "plus grosse partie" :  des d√©monstrations avec diff√©rents langages (Rust, Go, C#, AssemblyScript, Swift, ...) et diff√©rents outils pour par exemple faire des services Wasm (Suborbital, Spin, ...)  et une CLI en Go avec des plugins Wasm.

  L'objectif est de vous donner tous les √©l√©ments n√©cessaires pour vous y mettre par vous m√™me. Je fournirais donc tous les environnements avec les toolchains pr√©install√©es utilisable dans Gitpod mais aussi Docker avec VSCode.





